''' 1. –ù–∞–ø–∏—Å–∞—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É –¥–ª—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –≤–∞—Ä—ñ–∞–Ω—Ç–∞,
–∑–±–µ—Ä–µ–≥—Ç–∏ –π–æ–≥–æ —É —Ñ–∞–π–ª –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –≤–∞—Ä—ñ–∞–Ω—Ç–∞ (–ø—Ä–∏–∫–ª–∞–¥ 16.1).'''

# import numpy as np
# import matplotlib.pyplot as plt
#
#
# x_start = float(input("–í–≤–µ–¥—ñ—Ç—å –ø–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è x: "))
# x_end = float(input("–í–≤–µ–¥—ñ—Ç—å –∫—ñ–Ω—Ü–µ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è x: "))
# n = int(input("–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ—á–æ–∫: "))
#
# y_s = int(input("–í–≤–µ–¥—ñ—Ç—å –ø–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è y: "))
# y_m = int(input("–í–≤–µ–¥—ñ—Ç—å —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è y: "))
# y_e = int(input("–í–≤–µ–¥—ñ—Ç—å –∫—ñ–Ω—Ü–µ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è y: "))
#
#
# x = np.linspace(x_start, x_end, n)
#
# y = y_s * x**y_m - y_e
#
# plt.plot(x, y, 'r-', label=f'y={y_s}x^{y_m}-{y_e}')
#
# plt.xlabel('x')
# plt.ylabel('y')
# plt.grid(True)
# plt.title('–ì—Ä–∞—Ñ—ñ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó')
# plt.legend()
#
# plt.savefig('image12.png', dpi=400)
#
# plt.show()


''' 2. –ù–∞–ø–∏—Å–∞—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É –¥–ª—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥—ñ—Å—Ç–æ–≥—Ä–∞–º–∏ (–ø—Ä–∏–∫–ª–∞–¥ 16.2).'''

# import numpy as np
# import matplotlib.pyplot as plt
#
# n = int(input("–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ–π: "))
#
# x = []
# y = []
# print("–í–≤–µ–¥—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –∫–æ–∂–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó:")
#
# for i in range(n):
#     x_val = input(f"–ù–∞–∑–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó {i + 1}: ")
#     y_val = float(input(f"–ó–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó '{x_val}': "))
#     x.append(x_val)
#     y.append(y_val)
#
# x = np.array(x)
# y = np.array(y)
#
# plt.bar(x, y, color='darkgreen')
#
# plt.xlabel('–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó')
# plt.ylabel('–ó–Ω–∞—á–µ–Ω–Ω—è')
# plt.title('–ü—Ä–∏–∫–ª–∞–¥ –≥—ñ—Å—Ç–æ–≥—Ä–∞–º–∏')
# plt.grid(axis='y', linestyle='--', alpha=0.7)
#
# plt.savefig('histogram_example.png', dpi=400)
#
# plt.show()


'''–í–∞—Ä—ñ–∞–Ω—Ç 16'''
''' 1. –ó–æ–±—Ä–∞–∑–∏—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó ùë¶ = 1/ùúã ‚àô sin(0,3ùë•), ùë• ‚àà [‚àí8; 8], —Ç–∏–ø –ª—ñ–Ω—ñ—ó ‚Äì
–ø—É–Ω–∫—Ç–∏—Ä–Ω–∞, –∫–æ–ª—ñ—Ä –ª—ñ–Ω—ñ—ó ‚Äì —á–æ—Ä–Ω–∏–π. –ó–±–µ—Ä–µ–≥—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫ —É —Ñ–∞–π–ª function.jpg.'''


# import numpy as np
# import matplotlib.pyplot as plt
#
# x = np.linspace(-8, 8, 400)
# y = (1 / np.pi) * np.sin(0.3 * x)
#
# plt.plot(x, y, 'k--', label=r'$y = \frac{1}{\pi} \cdot \sin(0.3x)$', color='green')
#
# plt.xlabel('x')
# plt.ylabel('y')
# plt.title('–ì—Ä–∞—Ñ—ñ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó $y = \\frac{1}{\\pi} \cdot \sin(0.3x)$')
# plt.legend()
# plt.grid(True)
#
# plt.savefig('function.jpg', dpi=400)
#
# plt.show()


'''2. –ù–∞–ø–∏—Å–∞—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É, —è–∫–∞ –≤–∏–≤–µ–¥–µ –Ω–∞ –µ–∫—Ä–∞–Ω –≥—ñ—Å—Ç–æ–≥—Ä–∞–º—É –∫—ñ–ª—å–∫–æ—Å—Ç–µ–π
–≥—ñ–ø–µ—Ä–ø–æ—Å–∏–ª–∞–Ω—å –Ω–∞ 6-8 —Å–∞–π—Ç–∞—Ö (–∑–∞ –≤–∏–±–æ—Ä–æ–º). –ö—ñ–ª—å–∫—ñ—Å—Ç—å –≥—ñ–ø–µ—Ä–ø–æ—Å–∏–ª–∞–Ω—å –ø–æ–≤–∏–Ω–Ω–∞
–ø—ñ–¥—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏—Å—è –ø—Ä–æ–≥—Ä–∞–º–æ—é. '''

# import requests
# from bs4 import BeautifulSoup
# import matplotlib.pyplot as plt
#
# urls = [
#     'https://www.wikipedia.org',
#     'https://www.python.org',
#     'https://www.github.com',
#     'https://rozetka.com.ua',
#     'https://prom.ua',
#     'https://www.olx.ua'
# ]
#
# link_counts = []
# for url in urls:
#     try:
#         response = requests.get(url)
#         response.raise_for_status()
#
#         soup = BeautifulSoup(response.text, 'html.parser')
#
#         links = soup.find_all('a')
#         link_counts.append(len(links))
#         print(f"{url}: {len(links)} –≥—ñ–ø–µ—Ä–ø–æ—Å–∏–ª–∞–Ω—å")
#
#     except requests.RequestException as e:
#         print(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ {url}: {e}")
#         link_counts.append(0)
#
#
# plt.figure(figsize=(10, 6))
# plt.bar(urls, link_counts, color='skyblue')
# plt.xlabel('–°–∞–π—Ç–∏')
# plt.ylabel('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≥—ñ–ø–µ—Ä–ø–æ—Å–∏–ª–∞–Ω—å')
# plt.title('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≥—ñ–ø–µ—Ä–ø–æ—Å–∏–ª–∞–Ω—å –Ω–∞ –≤–µ–±-—Å–∞–π—Ç–∞—Ö')
# plt.xticks(rotation=45, ha="right")
# plt.tight_layout()
#
# plt.savefig('hyperlinks_histogram.png', dpi=300)
#
# plt.show()
